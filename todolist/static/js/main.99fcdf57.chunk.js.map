{"version":3,"sources":["image/xm.jpg","image/llz1.jpg","image/kl1.jpg","image/count.gif","index.js"],"names":["TodoForm","addTodo","useState","value","setValue","onSubmit","e","preventDefault","type","className","placeholder","onChange","target","App","props","text","isCompleted","todos","setTodos","number","num","setNum","completeTodo","todo","newTodos","i","length","index","console","log","showTodo","Todo","style","textDecoration","backgroundColor","checked","onClick","remove","filter","removeTodo","finished","unfinish","display","map","item","bind","this","src","xiomao","alt","konglong","llz1","count","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.99fcdf57.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/xm.165d24eb.jpg\";","export default __webpack_public_path__ + \"static/media/llz1.a279f1e1.jpg\";","export default __webpack_public_path__ + \"static/media/kl1.8c59c377.jpg\";","export default __webpack_public_path__ + \"static/media/count.5fcd9dd3.gif\";","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './todolist.css';\nimport xiomao from './image/xm.jpg';\nimport llz1 from './image/llz1.jpg';\nimport konglong from './image/kl1.jpg';\nimport count from './image/count.gif';\n \nfunction TodoForm({addTodo}){\n  const [value, setValue] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    if(!value) return;\n    addTodo(value);\n    setValue(\"\");\n  }\n  return (\n  <form onSubmit={handleSubmit}>\n    <input \n      type=\"text\"\n      className=\"text\"\n      value={value}\n      placeholder=\"请输入内容\"\n      onChange={e => setValue(e.target.value)}\n      />\n  </form>\n  )\n}\n \nfunction App (props){\n  const [todos, setTodos] = useState([\n    {\n      text: \"学习C++\",\n      isCompleted: true\n    },\n    {\n      text: \"学习JAVA\",\n      isCompleted: false\n    },\n    {\n      text: \"学习SQL\",\n      isCompleted: false\n    },\n  ]);\n  const [num,setNum] = useState ({\n    number : null\n  })\n\n  const addTodo = (text) => {\n    const newTodos = [...todos, {text,isCompleted:false}];\n    setTodos(newTodos);\n  };\n\n  \n  /* const completeTodo = index => {\n    const newTodos = [...todos];\n    if(newTodos[index].isCompleted){\n        newTodos[index].isCompleted = false;\n    }else{\n        newTodos[index].isCompleted = true;\n    }\n    //newTodos[index].isCompleted = false ? true : false;\n\n    //console.log(newTodos[index]);\n    setTodos(newTodos);\n    //console.log(newTodos);\n  }; */\n\n  const completeTodo = todo => {\n    const newTodos = [...todos];\n    //const finish = [];\n    for(var i = 0;i < newTodos.length; i++) {\n      if(newTodos[i].text === todo.text) {\n        \n        const index = newTodos[i];\n        console.log(index);\n        index.isCompleted = !index.isCompleted\n        /* if(index.isCompleted) {\n          index.isCompleted = false;  \n        }else{\n          index.isCompleted = true;\n        } */\n      }else{\n        setTodos(newTodos);\n      }\n    } \n    setTodos(newTodos);\n\n  }\n\n\n  const removeTodo = todo => {\n    const newTodos = [...todos];\n    const remove = newTodos.filter(todos => todos.text !== todo.text)\n    setTodos(remove);\n    console.log(remove)\n  };\n\n  const showTodo = num =>{\n    setNum(num);\n  }\n\n  const allcompleteTodo = () => {\n    const newTodos = [...todos];\n    for(var i = 0;i <newTodos.length;i++){\n      newTodos[i].isCompleted = true;\n    }\n    setTodos(newTodos);\n    console.log(newTodos);\n  }\n\n  const unallcompleteTodo = () => {\n    const newTodos = [...todos];\n    for(var i = 0;i <newTodos.length;i++){\n      newTodos[i].isCompleted = false;\n    }\n    setTodos(newTodos);\n    console.log(newTodos);\n  }\n\n\n  const different = () => {\n    const newTodos = [...todos];\n    for(let i = 0;i < newTodos.length;i++){\n      if(newTodos[i].isCompleted){\n        newTodos[i].isCompleted = false;\n      }else{\n        newTodos[i].isCompleted = true;\n      }\n      //newTodos[i].isCompleted = true ? false :true;\n      //console.log(i);\n    }\n    setTodos(newTodos);\n    //console.log(newTodos);\n  }\n  \n  const Todo = ({todo, index}) => \n  <li\n    style={{textDecoration: todo.isCompleted === true? \"line-through\" : \"none\",\n            backgroundColor: todo.isCompleted === true? \"rgb(243, 229, 243)\" : \"floralwhite\"}}\n   >\n    <input type=\"checkbox\" \n    checked={todo.isCompleted === true} \n    onChange={() => completeTodo(todo)} \n    />\n    <label onClick={() => completeTodo(todo)}>{todo.text}</label>\n    <button className=\"remove\" onClick={() => removeTodo(todo)}>删除</button>\n  </li>\n\n    //完成\n    const newTodos = [...todos];\n    const finished = newTodos.filter((num) => {\n        return num.isCompleted === true;\n        });\n    //console.log(finished);\n\n    //未完成\n    const newTodos1 = [...todos];\n    const unfinish = newTodos1.filter((num) => {\n    return num.isCompleted === false;\n    });\n    //console.log(unfinish);\n\n  return(\n        <div className=\"nav\">\n          <div className=\"heng-line\"></div>\n          <div className=\"content\">\n            <h2>备忘录</h2>\n            <div className=\"list\">\n                <TodoForm addTodo={addTodo}/>\n\n                <ul \n                style={{display : num.number === null ? \"block\" : \"none\"}}\n                >\n                {todos.map((item, index) => \n                    <Todo key={index}\n                    index={index}\n                    todo={item}\n                    />\n                    )}\n                </ul>\n\n                <ul \n                 style={{display : num === 0  ? \"block\" : \"none\"}}>\n                {todos.map((item, index) => \n                    <Todo key={index}\n                    index={index}\n                    todo={item}\n                    />\n                    )}\n                </ul>\n                \n                <ul className=\"finished\" \n                    //showTodo={()=>showTodo(num)}\n                    style={{display : num === 1 ? \"block\" : \"none\"}}\n                    >\n                    {finished.map((item,index) =>\n                        <Todo key={index}\n                        index={index}\n                        todo={item} \n                        />\n                    )}\n                </ul>\n\n                <ul className=\"unfinish\" \n                    style={{display : num === 2 ? \"block\" : \"none\"}}\n                    >\n                    {unfinish.map((item,index) =>\n                        <Todo key={index}\n                        index={index}\n                        todo={item}\n                        />\n                    )}\n                </ul>\n            </div>\n            <div className=\"footer\">\n                <button className=\"select\" onClick={allcompleteTodo}>全选</button>\n                <button className=\"unselect\" onClick={unallcompleteTodo}>取消全选</button>\n                <button className=\"all\" onClick={() => setNum(0)}>全部</button>\n                <button className=\"complete\" onClick={showTodo.bind(this,1)}>已完成</button>\n                <button className=\"uncomplete\" onClick={showTodo.bind(this,2)}>未完成</button>\n            </div>  \n            <button className=\"different\" onClick={different}>反选</button>\n        </div>\n        <img src={xiomao} className=\"xm\" alt=\"\"></img>\n        <img src={konglong} className=\"kl\" alt=\"\"></img>\n        <img src={llz1} className=\"llz1\" alt=\"\"></img>\n        <img src={count} className=\"count\" alt=\"\"></img>\n\n        {/* <div className=\"leftline\"></div>\n        <div className=\"rightline\"></div> */}\n        <div className=\"hengline\"></div>\n        </div>\n  ) \n}\n\n \nexport default App;\n\nReactDOM.render(\n    <App />,\n    document.getElementById(\"root\")\n)\n"],"sourceRoot":""}